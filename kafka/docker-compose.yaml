version: "3.3"

services:
  kafka.local:
    image: docker.io/confluentinc/cp-kafka:7.4.3
    hostname: kafka.local
    ports:
      - "19092:19092"
    environment:
      KAFKA_KRAFT_MODE: 'true'
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_BROKER_ID: 1
      KAFKA_NODE_ID: 1
      CLUSTER_ID: 4L6g3nShT-eMCtK--X86sw
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka.local:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: CONTROLLER://kafka.local:9093,PLAINTEXT://kafka.local:9092,PLAINTEXT_HOST://0.0.0.0:19092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka.local:9092,PLAINTEXT_HOST://localhost:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_HEAP_OPTS: -Xmx2G -Xms2G
    networks:
      compose_network:

  topics-init:
    image: docker.io/confluentinc/cp-kafka:7.4.3
    command:
      - /bin/bash
      - -c
      - |
        echo "Waiting for Kafka to be ready..."
        cub kafka-ready -b kafka.local:9092 1 20
        kafka-topics --create --if-not-exists --bootstrap-server kafka.local:9092 --partitions 2 --replication-factor 1 --topic default_topic
    depends_on:
      - "kafka.local"
    networks:
      compose_network:

  kafdrop.local:
    image: docker.io/obsidiandynamics/kafdrop:3.31.0
    ports:
      - "9100:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka.local:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka.local"
    networks:
      compose_network:

networks:
  compose_network:
    ipam:
      config:
        - subnet: 172.24.24.0/24
